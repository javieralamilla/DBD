--TABLAS ENTIDADES

-- 1. Tabla ROL
CREATE TABLE IF NOT EXISTS rol (
    id_rol SERIAL PRIMARY KEY,
    nombre_rol VARCHAR(50) NOT NULL
);

-- 2. Tabla PERMISOS
CREATE TABLE IF NOT EXISTS permisos (
    id_permiso SERIAL PRIMARY KEY,
    descripcion_permiso VARCHAR(100) NOT NULL
);

-- 3. Tabla USUARIO
CREATE TABLE IF NOT EXISTS usuario (
    id_usuario SERIAL PRIMARY KEY,
    id_rol INTEGER NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    contrasena VARCHAR(255) NOT NULL,
    FOREIGN KEY (id_rol) REFERENCES rol(id_rol)
);

-- 4. Tabla DIRECCION
CREATE TABLE IF NOT EXISTS direccion (
    id_direccion SERIAL PRIMARY KEY,
    calle VARCHAR(255) NOT NULL,
    numero INTEGER NOT NULL,
    comuna VARCHAR(100) NOT NULL,
    ciudad VARCHAR(100) NOT NULL,
    region VARCHAR(100) NOT NULL
);

-- 5. Tabla METODO_DE_PAGO
CREATE TABLE IF NOT EXISTS metodo_de_pago (
    id_metodo_pago SERIAL PRIMARY KEY,
    id_usuario INTEGER NOT NULL,
    tipo_de_pago VARCHAR(50) NOT NULL,
    detalle VARCHAR(100) NOT NULL,
    titular VARCHAR(50) NOT NULL,
    fecha_de_vencimiento VARCHAR(50) NOT NULL,
    FOREIGN KEY (id_usuario) REFERENCES usuario(id_usuario)
);

-- 6. Tabla COMPRA
CREATE TABLE IF NOT EXISTS compra (
    id_compra SERIAL PRIMARY KEY,
    id_usuario INTEGER NOT NULL,
    id_boleta INTEGER,
    id_metodo_pago INTEGER NOT NULL,
    FOREIGN KEY (id_usuario) REFERENCES usuario(id_usuario),
    FOREIGN KEY (id_boleta) REFERENCES boleta(id_boleta),
    FOREIGN KEY (id_metodo_pago) REFERENCES metodo_de_pago(id_metodo_pago)
);

-- 7. Tabla VALORACION
CREATE TABLE IF NOT EXISTS valoracion (
    id_valoracion SERIAL PRIMARY KEY,
    id_usuario INTEGER NOT NULL,
    id_producto INTEGER NOT NULL,
    puntuacion INTEGER CHECK (puntuacion >= 1 AND puntuacion <= 5),
    FOREIGN KEY (id_usuario) REFERENCES usuario(id_usuario),
    FOREIGN KEY (id_producto) REFERENCES producto(id_producto)
);

-- Tablas de relación muchos a muchos

-- Relación Rol-Permisos
CREATE TABLE IF NOT EXISTS rol_permisos (
    id_rol INTEGER,
    id_permiso INTEGER,
    PRIMARY KEY (id_rol, id_permiso),
    FOREIGN KEY (id_rol) REFERENCES rol(id_rol),
    FOREIGN KEY (id_permiso) REFERENCES permisos(id_permiso)
);

-- Relación dirección-usuario
CREATE TABLE IF NOT EXISTS dirección_usuario (
    id_direccion INTEGER,
    id_usuario INTEGER,
    PRIMARY KEY (id_direccion, id_usuario),
    FOREIGN KEY (id_direccion) REFERENCES direccion(id_direccion),
    FOREIGN KEY (id_usuario) REFERENCES usuario(id_usuario)
);

-- Relación compra_producto
CREATE TABLE IF NOT EXISTS compra_producto (
    id_compra INTEGER,
    id_producto INTEGER,
    cantidad INTEGER NOT NULL,
    precio_unitario DECIMAL(10,2) NOT NULL,
    subtotal DECIMAL(10,2) NOT NULL,
    PRIMARY KEY (id_compra, id_producto),
    FOREIGN KEY (id_compra) REFERENCES compra(id_compra),
    FOREIGN KEY (id_producto) REFERENCES producto(id_producto)
);

-- Relación usuario y producto
CREATE TABLE IF NOT EXISTS usuario_producto (
    id_usuario INTEGER,
    id_producto INTEGER,
    PRIMARY KEY (id_usuario, id_producto),
    FOREIGN KEY (id_usuario) REFERENCES usuario(id_usuario),
    FOREIGN KEY (id_producto) REFERENCES producto(id_producto)
);
